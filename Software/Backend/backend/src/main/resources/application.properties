spring.application.name=backend


# application.properties
spring.datasource.url=jdbc:postgresql://localhost:5432/Laser-Project
spring.datasource.username=postgres
spring.datasource.password=12345678

spring.jpa.hibernate.ddl-auto=update
# update is a good starting point during development. But switch to none and use a migration tool before deploying to production. (Flyway or Liquibase)

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true
# (Optional) Formats the SQL output nicely


# Swagger UI Path
# http://localhost:8080/swagger-ui/index.html
# Swagger UI custom path
#springdoc.swagger-ui.path=/swagger-ui.html
# Sort API paths by HTTP methods
springdoc.swagger-ui.operationsSorter=method
# JSON format of the API documentation
springdoc.api-docs.path=/api-docs
# Enable or disable API documentation
springdoc.swagger-ui.enabled=true

# Test Database Connection Status
# You can check database status from this endpoint http://localhost:8080/actuator/health
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always



# JWT Configuration
# For development/testing, you can uncomment and set a fixed secret:
jwt.secret=Super-Long-fixed-development-secret-key-here-remember-to-comment-it-in-production
# If jwt.secret is not defined, a secure random secret will be generated on startup
jwt.expiration=86400



# File storage configuration
# Choose storage type: local (default) or azure (Spring Cloud Azure)
file.storage.type=azure
file.upload.directory=./uploads
file.max-size=10MB

# Azure Blob Storage configuration (loaded from .env file via DotenvProcessor)
spring.cloud.azure.storage.blob.account-name=${spring.cloud.azure.storage.blob.account-name}
spring.cloud.azure.storage.blob.endpoint=${spring.cloud.azure.storage.blob.endpoint}
spring.cloud.azure.storage.blob.account-key=${spring.cloud.azure.storage.blob.account-key}
azure.storage.container-name=${azure.storage.container-name}